# Index

1.  [About](#About)
2.  [Dependencies](#Dependencies)
3.  [Installation](#Installation)
      - [Documentation](#Documentation)
4.  [Basic Usage](#Basic_Usage)
5.  [Development](#Development)
      - [Directory structure](#Directory_structure)
      - [Installing symlinks](#Installing_symlinks)

<a name="About"></a>

-----

# lua-db - lua drawbuffers

This is a Lua library for graphics programming, written in C and Lua.
It's main component is a drawbuffer, a buffer that has a width, height,
pixel format, and pixel data. There are various graphics primitives
available for the drawbuffer objects, e.g. lines, triangles, rectangles.
lua-db does not support any hardware acceleration.

There are multiple output options:

  - SDL window
  - Linux framebuffer
  - Terminal output
      - monochrome/8bit colors/24bit colors
      - braile characters(required utf8 support, only 1 color per 2x4 pixels)
      - block characters(required utf8 support)
      - regular characters

<a name="Dependencies"></a>

-----

# Dependencies

See the respective readme's on how to install them.

  - lua-time (runtime for examples)
  - SDL2 library for sdl module (runtime, build)
  - Linux headers for framebuffer module(build)
  - cmark(building doc)

<a name="Installation"></a>

-----

# Installation

The installation is handled by the top-level makefile.

Simple run: `make install` in the top-level directory.

This will build the library, then copy the Lua files to
`/usr/local/share/lua/5.1/lua-db`, and the shared libraries to
`/usr/local/lib/lua/5.1/`.

<a name="Documentation"></a>

-----

## Documentation

The Documentation is located in doc/ in markdown format.

You can run "make doc" to generate the merged documentation in HTML and markdown.
This will also generate the index and anchor files.

This requires the `cmark` markdown converter to be installed and callable.

The merged output files will be in `doc/merged._md` and `doc/merged.html`.

<a name="Basic_Usage"></a>

-----

# Basic Usage

Usually the module is loaded as:

    local ldb = require("lua-db")

This loads all available Lua modules and all available C modules, and returns
them in a table. (See `lua/init.lua`)

To load just the C core, you can use `require("ldb_core")`.

The returned table contains a function, `ldb.new_drawbuffer(width, height, px_fmt)`.
`width` and `height` are in pixels and are required. `px_fmt` specifies the pixel format and is optional. By default, a 32bpp RGBA value is used.

On success a drawbuffer usedata value is returned that has methods
for interaction in it's metatable.

On failure, nil and an error message is returned.

For now, see `examples/` for further usage information. TODO.

<a name="Development"></a>

-----

# Development

Contributions of all kind are welcome. You can also create pull requests.
If you implement a major new feature, make sure:

  - You don't break compatibility in a non-obvious way
  - You provide test cases for the changes
  - You provide at least basic documentation

<a name="Directory_structure"></a>

-----

## Directory structure

`doc/` contains the files(markdown and makefile) needed to build the documentation.

`examples/` contains runnable example code. Some examples require assets, they are in `examples/data`.

`lua/` contains the Lua part of this library. If you `require("lua-db")` the library normally, `lua/init.lua` is returned.

`lua/gui/` contains the GUI library.

`src/` contains the C part of the library. It's split into 4 parts:

  - ldb\_core (core drawbuffer functionality, but no graphics primitives),
  - ldb\_gfx (graphics primitives like lines, rectangles)
  - ldb\_fb (Linux framebuffer output support)
  - ldb\_sdl (SDL window output support)

<a name="Installing_symlinks"></a>

-----

# Development Installation

You can install symlinks instead of running `make install`.
This makes testing changes easier, as there is no need for `make install`, which
often requires sudo.

    # make sure target path exists
    sudo mkdir -p /usr/local/share/lua/5.1/
    sudo mkdir -p /usr/local/lib/lua/5.1/
    
    # install symlinks so make install is not needed after each change
    # (adjust paths of lua-db source path)
    sudo ln -s $(pwd)/lua /usr/local/share/lua/5.1/lua-db
    sudo ln -s $(pwd)/src/ldb_core.so /usr/local/lib/lua/5.1/
    sudo ln -s $(pwd)/src/ldb_fb.so /usr/local/lib/lua/5.1/
    sudo ln -s $(pwd)/src/ldb_gfx.so /usr/local/lib/lua/5.1/
    sudo ln -s $(pwd)/src/ldb_sdl.so /usr/local/lib/lua/5.1/
